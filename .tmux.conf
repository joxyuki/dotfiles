# original key-binds
set-option -g prefix C-j
unbind C-b

set-option -g escape-time 1
set-option -g default-terminal screen-256color

# logging
bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%y%%m%%d_%%H%%M%%S\")] \${LINE}\" >> \${HOME}/tmp/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
bind-key C-o pipe-pane \; display-message "Logging end."

# colour scheme
set -g status "on"
set -g status-style bg=colour67
set -g status-left-style fg=colour232,bg=colour144
set -g status-left " #S "
set -g status-right-style fg=colour232,bg=colour144
set -g status-right-length "100"
set -g status-right " %Y-%m-%d %H:%M @#h "
setw -g window-status-style fg=colour253
setw -g window-status-activity-style fg=colour144
setw -g window-status-separator ""
setw -g window-status-format " #I:#W "
setw -g window-status-current-format "#[bg=colour24] #I:#W "
set -g message-style fg=colour253,bg=colour16
set -g message-command-style fg=colour253,bg=colour16
set -g pane-border-style fg=colour67
set -g pane-active-border-style fg=colour253

bind r source-file ~/.tmux.conf \; display "Reloaded .tmux.conf"
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind t split-window -v -c '#{pane_current_path}' -p 20

# from here, copy from vim-keys.conf

# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
#bind s split-window -v
#bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
